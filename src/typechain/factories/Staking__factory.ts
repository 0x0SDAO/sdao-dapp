/* Autogenerated file. Do not edit manually. */
/* tslint:disable */
/* eslint-disable */

import {
  Signer,
  utils,
  BigNumberish,
  Contract,
  ContractFactory,
  Overrides,
} from "ethers";
import { Provider, TransactionRequest } from "@ethersproject/providers";
import type { Staking, StakingInterface } from "../Staking";

const _abi = [
  {
    inputs: [
      {
        internalType: "address",
        name: "_sdao",
        type: "address",
      },
      {
        internalType: "address",
        name: "_ssdao",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_epochLength",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_firstEpochNumber",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "_firstEpochTime",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "constructor",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "address",
        name: "distributor",
        type: "address",
      },
    ],
    name: "DistributorSet",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipPulled",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: true,
        internalType: "address",
        name: "previousOwner",
        type: "address",
      },
      {
        indexed: true,
        internalType: "address",
        name: "newOwner",
        type: "address",
      },
    ],
    name: "OwnershipPushed",
    type: "event",
  },
  {
    anonymous: false,
    inputs: [
      {
        indexed: false,
        internalType: "uint256",
        name: "warmup",
        type: "uint256",
      },
    ],
    name: "WarmupSet",
    type: "event",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
    ],
    name: "claim",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "distributor",
    outputs: [
      {
        internalType: "contract IDistributor",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "epoch",
    outputs: [
      {
        internalType: "uint256",
        name: "length",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "number",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "end",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "distribute",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "forfeit",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "index",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "pullManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "newOwner_",
        type: "address",
      },
    ],
    name: "pushManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "rebase",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "renounceManagement",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "sdao",
    outputs: [
      {
        internalType: "contract IERC20",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "secondsToNextEpoch",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_distributor",
        type: "address",
      },
    ],
    name: "setDistributor",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "uint256",
        name: "_warmupPeriod",
        type: "uint256",
      },
    ],
    name: "setWarmupLength",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "ssdao",
    outputs: [
      {
        internalType: "contract IStakedScholarDAOToken",
        name: "",
        type: "address",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_claim",
        type: "bool",
      },
    ],
    name: "stake",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [],
    name: "supplyInWarmup",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "toggleLock",
    outputs: [],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "_to",
        type: "address",
      },
      {
        internalType: "uint256",
        name: "_amount",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "_trigger",
        type: "bool",
      },
    ],
    name: "unstake",
    outputs: [
      {
        internalType: "uint256",
        name: "amount_",
        type: "uint256",
      },
    ],
    stateMutability: "nonpayable",
    type: "function",
  },
  {
    inputs: [
      {
        internalType: "address",
        name: "",
        type: "address",
      },
    ],
    name: "warmupInfo",
    outputs: [
      {
        internalType: "uint256",
        name: "deposit",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "gons",
        type: "uint256",
      },
      {
        internalType: "uint256",
        name: "expiry",
        type: "uint256",
      },
      {
        internalType: "bool",
        name: "lock",
        type: "bool",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
  {
    inputs: [],
    name: "warmupPeriod",
    outputs: [
      {
        internalType: "uint256",
        name: "",
        type: "uint256",
      },
    ],
    stateMutability: "view",
    type: "function",
  },
];

const _bytecode =
  "0x60c060405234801561001057600080fd5b50604051611a40380380611a40833981810160405260a081101561003357600080fd5b50805160208201516040808401516060850151608090950151600080546001600160a01b031916331780825593519596949592949391926001600160a01b0392909216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908290a36001600160a01b0385166100ec576040805162461bcd60e51b81526020600482015260126024820152715a65726f20616464726573733a205344414f60701b604482015290519081900360640190fd5b6001600160601b0319606086901b166080526001600160a01b038416610159576040805162461bcd60e51b815260206004820152601360248201527f5a65726f20616464726573733a20535344414f00000000000000000000000000604482015290519081900360640190fd5b6001600160601b0319606094851b1660a0526040805160808101825284815260208101849052908101829052600094018490526002929092556003556004556005555060805160601c60a05160601c61183561020b6000398061041f528061055b528061060952806106bf528061080a5280610d005280610e255280610ebb528061112b528061131e5250806106f552806107d75280610ba75280610bd85280611074528061127b52506118356000f3fe608060405234801561001057600080fd5b506004361061016c5760003560e01c8063900cf0cf116100cd578063af14052c11610081578063deac361a11610066578063deac361a1461035c578063f3d86e4a14610364578063ff9413d81461036c5761016c565b8063af14052c1461034c578063bfe10928146103545761016c565b80639483c1d7116100b25780639483c1d71461030857806398750e4d14610310578063995846bd146103185761016c565b8063900cf0cf146102bd5780639238d592146102eb5761016c565b80632986c0e5116101245780635a96ac0a116101095780635a96ac0a146102415780636746f4c21461024957806375619ab5146102975761016c565b80632986c0e51461021357806346f68ee91461021b5761016c565b80631e83409a116101555780631e83409a1461019f57806320138641146101d757806321d0af34146101df5761016c565b8063089208d8146101715780630cc6f1341461017b575b600080fd5b610179610374565b005b61018361041d565b604080516001600160a01b039092168252519081900360200190f35b6101c5600480360360208110156101b557600080fd5b50356001600160a01b0316610441565b60408051918252519081900360200190f35b6101c5610605565b6101c5600480360360608110156101f557600080fd5b506001600160a01b038135169060208101359060400135151561069e565b6101c5610806565b6101796004803603602081101561023157600080fd5b50356001600160a01b0316610861565b610179610960565b61026f6004803603602081101561025f57600080fd5b50356001600160a01b0316610a0a565b6040805194855260208501939093528383019190915215156060830152519081900360800190f35b610179600480360360208110156102ad57600080fd5b50356001600160a01b0316610a34565b6102c5610ae7565b604080519485526020850193909352838301919091526060830152519081900360800190f35b6101796004803603602081101561030157600080fd5b5035610af6565b6101c5610b90565b610183610ba5565b6101c56004803603606081101561032e57600080fd5b506001600160a01b0381351690602081013590604001351515610bc9565b6101c5610eab565b6101836111d8565b6101c56111e7565b6101c56111ed565b6101796112a9565b6000546001600160a01b031633146103d3576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600080546040516001600160a01b03909116907fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba908390a3600080546001600160a01b0319169055565b7f000000000000000000000000000000000000000000000000000000000000000081565b600061044b611743565b506001600160a01b03821660009081526007602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460ff161515606082018190526104e9576001600160a01b03831633146104e95760405162461bcd60e51b81526004018080602001828103825260268152602001806117bc6026913960400191505060405180910390fd5b6040810151600354108015906105025750604081015115155b156105fa576001600160a01b038316600090815260076020908152604082208281556001810183905560028101929092556003909101805460ff1916905581015160095461054f916112cd565b6009819055506105f2837f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637965d56d84602001516040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b1580156105c157600080fd5b505afa1580156105d5573d6000803e3d6000fd5b505050506040513d60208110156105eb57600080fd5b505161130f565b915050610600565b60009150505b919050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316637965d56d6009546040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b15801561066d57600080fd5b505afa158015610681573d6000803e3d6000fd5b505050506040513d602081101561069757600080fd5b5051905090565b81600082156106b2576106af610eab565b90505b6106e76001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308761134b565b6106f182826114d3565b91507f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b15801561076057600080fd5b505afa158015610774573d6000803e3d6000fd5b505050506040513d602081101561078a57600080fd5b50518211156107ca5760405162461bcd60e51b81526004018080602001828103825260258152602001806118046025913960400191505060405180910390fd5b6107fe6001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016868461152d565b509392505050565b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316632986c0e56040518163ffffffff1660e01b815260040160206040518083038186803b15801561066d57600080fd5b6000546001600160a01b031633146108c0576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b6001600160a01b0381166109055760405162461bcd60e51b815260040180806020018281038252602681526020018061176e6026913960400191505060405180910390fd5b600080546040516001600160a01b03808516939216917fea8258f2d9ddb679928cf34b78cf645b7feda9acc828e4dd82d014eaae270eba91a3600180546001600160a01b0319166001600160a01b0392909216919091179055565b6001546001600160a01b031633146109a95760405162461bcd60e51b81526004018080602001828103825260228152602001806117e26022913960400191505060405180910390fd5b600154600080546040516001600160a01b0393841693909116917faa151555690c956fc3ea32f106bb9f119b5237a061eaa8557cff3e51e3792c8d91a3600154600080546001600160a01b0319166001600160a01b03909216919091179055565b60076020526000908152604090208054600182015460028301546003909301549192909160ff1684565b6000546001600160a01b03163314610a93576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b600680546001600160a01b0383166001600160a01b0319909116811790915560408051918252517f86719c518c7d99ac94b3d405d462ea876ba5cd0a978461dc9a7c9862a94858869181900360200190a150565b60025460035460045460055484565b6000546001600160a01b03163314610b55576040805162461bcd60e51b815260206004820181905260248201527f4f776e61626c653a2063616c6c6572206973206e6f7420746865206f776e6572604482015290519081900360640190fd5b60088190556040805182815290517fac17d51c35ac71d3eddc155985908430e88946d51e2f6093e93c1c0aba08f6c49181900360200190a150565b600454600090610ba090426112cd565b905090565b7f000000000000000000000000000000000000000000000000000000000000000081565b6000610c006001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001633308661134b565b610c12610c0b610eab565b84906114d3565b9250818015610c215750600854155b15610c3757610c30848461130f565b9050610ea4565b610c3f611743565b506001600160a01b03841660009081526007602090815260409182902082516080810184528154815260018201549281019290925260028101549282019290925260039091015460ff16151560608201819052610cdd576001600160a01b0385163314610cdd5760405162461bcd60e51b81526004018080602001828103825260288152602001806117946028913960400191505060405180910390fd5b604080516080810190915281518190610cf690876114d3565b8152602001610d997f00000000000000000000000000000000000000000000000000000000000000006001600160a01b0316631bd39674886040518263ffffffff1660e01b81526004018082815260200191505060206040518083038186803b158015610d6257600080fd5b505afa158015610d76573d6000803e3d6000fd5b505050506040513d6020811015610d8c57600080fd5b50516020850151906114d3565b8152600854600354602090920191610db0916114d3565b815260608381015115156020928301526001600160a01b038881166000908152600784526040908190208551815585850151600182015585820151600282015594909201516003909401805460ff19169415159490941790935580516306f4e59d60e21b8152600481018890529051610e9c937f00000000000000000000000000000000000000000000000000000000000000001692631bd396749260248082019391829003018186803b158015610e6757600080fd5b505afa158015610e7b573d6000803e3d6000fd5b505050506040513d6020811015610e9157600080fd5b5051600954906114d3565b600955508290505b9392505050565b60008042600280015411610ba0577f00000000000000000000000000000000000000000000000000000000000000006001600160a01b031663058ecdb46002600301546002600101546040518363ffffffff1660e01b81526004018083815260200182815260200192505050602060405180830381600087803b158015610f3157600080fd5b505af1158015610f45573d6000803e3d6000fd5b505050506040513d6020811015610f5b57600080fd5b5050600254600454610f6c916114d3565b6004556003805460010190556006546001600160a01b03161561107057600660009054906101000a90046001600160a01b03166001600160a01b031663e4fc6b6d6040518163ffffffff1660e01b8152600401600060405180830381600087803b158015610fd957600080fd5b505af1158015610fed573d6000803e3d6000fd5b50505050600660009054906101000a90046001600160a01b03166001600160a01b031663e7187e8a6040518163ffffffff1660e01b8152600401602060405180830381600087803b15801561104157600080fd5b505af1158015611055573d6000803e3d6000fd5b505050506040513d602081101561106b57600080fd5b505190505b60007f00000000000000000000000000000000000000000000000000000000000000006001600160a01b03166370a08231306040518263ffffffff1660e01b815260040180826001600160a01b0316815260200191505060206040518083038186803b1580156110df57600080fd5b505afa1580156110f3573d6000803e3d6000fd5b505050506040513d602081101561110957600080fd5b505160408051639358928b60e01b815290519192506000916001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001691639358928b916004808301926020929190829003018186803b15801561117157600080fd5b505afa158015611185573d6000803e3d6000fd5b505050506040513d602081101561119b57600080fd5b505190506111a981846114d3565b82116111b95760006005556111d1565b6111cd836111c784846112cd565b906112cd565b6005555b5050905090565b6006546001600160a01b031681565b60085481565b60006111f7611743565b503360008181526007602081815260408084208151608081018352815481526001820180548286019081526002840180549584019590955260038401805460ff81161515606086015299895296909552918690559085905593905560ff1990931690559051600954611268916112cd565b60095580516112a3906001600160a01b037f00000000000000000000000000000000000000000000000000000000000000001690339061152d565b51905090565b336000908152600760205260409020600301805460ff19811660ff90911615179055565b6000610ea483836040518060400160405280601e81526020017f536166654d6174683a207375627472616374696f6e206f766572666c6f7700008152506116ac565b60006113456001600160a01b037f000000000000000000000000000000000000000000000000000000000000000016848461152d565b50919050565b604080516001600160a01b0385811660248301528481166044830152606480830185905283518084039091018152608490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff166323b872dd60e01b17815292518251600094606094938a169392918291908083835b602083106113e55780518252601f1990920191602091820191016113c6565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611447576040519150601f19603f3d011682016040523d82523d6000602084013e61144c565b606091505b509150915081801561147a57508051158061147a575080806020019051602081101561147757600080fd5b50515b6114cb576040805162461bcd60e51b815260206004820152601460248201527f5452414e534645525f46524f4d5f4641494c4544000000000000000000000000604482015290519081900360640190fd5b505050505050565b600082820183811015610ea4576040805162461bcd60e51b815260206004820152601b60248201527f536166654d6174683a206164646974696f6e206f766572666c6f770000000000604482015290519081900360640190fd5b604080516001600160a01b038481166024830152604480830185905283518084039091018152606490920183526020820180517bffffffffffffffffffffffffffffffffffffffffffffffffffffffff1663a9059cbb60e01b178152925182516000946060949389169392918291908083835b602083106115bf5780518252601f1990920191602091820191016115a0565b6001836020036101000a0380198251168184511680821785525050505050509050019150506000604051808303816000865af19150503d8060008114611621576040519150601f19603f3d011682016040523d82523d6000602084013e611626565b606091505b5091509150818015611654575080511580611654575080806020019051602081101561165157600080fd5b50515b6116a5576040805162461bcd60e51b815260206004820152600f60248201527f5452414e534645525f4641494c45440000000000000000000000000000000000604482015290519081900360640190fd5b5050505050565b6000818484111561173b5760405162461bcd60e51b81526004018080602001828103825283818151815260200191508051906020019080838360005b838110156117005781810151838201526020016116e8565b50505050905090810190601f16801561172d5780820380516001836020036101000a031916815260200191505b509250505060405180910390fd5b505050900390565b6040518060800160405280600081526020016000815260200160008152602001600015158152509056fe4f776e61626c653a206e6577206f776e657220697320746865207a65726f206164647265737345787465726e616c206465706f7369747320666f72206163636f756e7420617265206c6f636b656445787465726e616c20636c61696d7320666f72206163636f756e7420617265206c6f636b65644f776e61626c653a206d757374206265206e6577206f776e657220746f2070756c6c496e73756666696369656e74205344414f2062616c616e636520696e20636f6e7472616374a164736f6c6343000705000a";

export class Staking__factory extends ContractFactory {
  constructor(
    ...args: [signer: Signer] | ConstructorParameters<typeof ContractFactory>
  ) {
    if (args.length === 1) {
      super(_abi, _bytecode, args[0]);
    } else {
      super(...args);
    }
  }

  deploy(
    _sdao: string,
    _ssdao: string,
    _epochLength: BigNumberish,
    _firstEpochNumber: BigNumberish,
    _firstEpochTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): Promise<Staking> {
    return super.deploy(
      _sdao,
      _ssdao,
      _epochLength,
      _firstEpochNumber,
      _firstEpochTime,
      overrides || {}
    ) as Promise<Staking>;
  }
  getDeployTransaction(
    _sdao: string,
    _ssdao: string,
    _epochLength: BigNumberish,
    _firstEpochNumber: BigNumberish,
    _firstEpochTime: BigNumberish,
    overrides?: Overrides & { from?: string | Promise<string> }
  ): TransactionRequest {
    return super.getDeployTransaction(
      _sdao,
      _ssdao,
      _epochLength,
      _firstEpochNumber,
      _firstEpochTime,
      overrides || {}
    );
  }
  attach(address: string): Staking {
    return super.attach(address) as Staking;
  }
  connect(signer: Signer): Staking__factory {
    return super.connect(signer) as Staking__factory;
  }
  static readonly bytecode = _bytecode;
  static readonly abi = _abi;
  static createInterface(): StakingInterface {
    return new utils.Interface(_abi) as StakingInterface;
  }
  static connect(
    address: string,
    signerOrProvider: Signer | Provider
  ): Staking {
    return new Contract(address, _abi, signerOrProvider) as Staking;
  }
}
